<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        WindowStartupLocation="CenterScreen"
        xmlns:local="clr-namespace:TNCApp_New"
        xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2" x:Class="TNCApp_New.MainWindow"
        mc:Ignorable="d"
        Title="MainWindow" Height="673.5" Width="974">
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <!--                            <Trigger Property="IsMouseOver" Value="True">-->
                            <!--                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>-->
                            <!--                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>-->
                            <!--                            </Trigger>-->
                            <!--                            <Trigger Property="IsPressed" Value="true">-->
                            <!--                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>-->
                            <!--                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>-->
                            <!--                            </Trigger>-->
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="ListBorder" Color="#828790"/>
        <Style x:Key="ListViewStyle1" TargetType="{x:Type ListView}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ListBorder}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="#FF042271"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListView}">
                        <Themes:ListBoxChrome x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderFocused="{TemplateBinding IsKeyboardFocusWithin}" SnapsToDevicePixels="true">
                            <ScrollViewer Padding="{TemplateBinding Padding}" Style="{DynamicResource {x:Static GridView.GridViewScrollViewerStyleKey}}" Margin="-2,-20,2,-2">
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Height="335"/>
                            </ScrollViewer>
                        </Themes:ListBoxChrome>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsGrouping" Value="true"/>
                                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="ProgressBar.Progress" Color="#FF287ADC"/>
        <SolidColorBrush x:Key="ProgressBar.Background" Color="#FFE6E6E6"/>
        <SolidColorBrush x:Key="ProgressBar.Border" Color="#FFBCBCBC"/>
        <Style x:Key="ProgressBarStyle1" TargetType="{x:Type ProgressBar}">
            <Setter Property="Foreground" Value="{StaticResource ProgressBar.Progress}"/>
            <Setter Property="Background" Value="{StaticResource ProgressBar.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ProgressBar.Border}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ProgressBar}">
                        <Grid x:Name="TemplateRoot">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Determinate"/>
                                    <VisualState x:Name="Indeterminate">
                                        <Storyboard RepeatBehavior="Forever">
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="Animation">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0.25"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0.25"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0.25"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <PointAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)" Storyboard.TargetName="Animation">
                                                <EasingPointKeyFrame KeyTime="0" Value="-0.5,0.5"/>
                                                <EasingPointKeyFrame KeyTime="0:0:1" Value="0.5,0.5"/>
                                                <EasingPointKeyFrame KeyTime="0:0:2" Value="1.5,0.5"/>
                                            </PointAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"/>
                            <Rectangle x:Name="PART_Track"/>
                            <Grid x:Name="PART_Indicator" ClipToBounds="true" HorizontalAlignment="Left">
                                <Rectangle x:Name="Indicator" Fill="{TemplateBinding Foreground}"/>
                                <Rectangle x:Name="Animation" Fill="{TemplateBinding Foreground}" RenderTransformOrigin="0.5,0.5">
                                    <Rectangle.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Rectangle.RenderTransform>
                                </Rectangle>
                            </Grid>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Orientation" Value="Vertical">
                                <Setter Property="LayoutTransform" TargetName="TemplateRoot">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsIndeterminate" Value="true">
                                <Setter Property="Visibility" TargetName="Indicator" Value="Collapsed"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="OptionMark.Static.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="OptionMark.Static.Border" Color="#FF707070"/>
        <Style x:Key="OptionMarkFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="CheckedBlue" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="#FF285AB3" Offset="0" />
            <GradientStop Color="#FF4184EC" Offset="0.5" />
            <GradientStop Color="#FF558BED" Offset="0.5" />
            <GradientStop Color="#FF7DACF0" Offset="1" />
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="CheckedOrange" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="#FFCA6A13" Offset="0" />
            <GradientStop Color="#FFF67D0C" Offset="0.2" />
            <GradientStop Color="#FFFE7F0C" Offset="0.2" />
            <GradientStop Color="#FFFA8E12" Offset="0.5" />
            <GradientStop Color="#FFFF981D" Offset="0.5" />
            <GradientStop Color="#FFFCBC5A" Offset="1" />
        </LinearGradientBrush>
        <SolidColorBrush x:Key="CheckedOrangeBorder" Color="#FF8E4A1B" />
        <SolidColorBrush x:Key="CheckedBlueBorder" Color="#FF143874" />
        <Style x:Key="OrangeSwitchStyle" TargetType="{x:Type CheckBox}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="OnChecking">
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="slider" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="53" />
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnUnchecking">
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="slider" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0" />
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <DockPanel x:Name="dockPanel">
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}" RecognizesAccessKey="True" VerticalAlignment="Center" />
                            <Grid>
                                <Border x:Name="BackgroundBorder" BorderBrush="#FF939393" BorderThickness="1" CornerRadius="3" Height="27" Width="94">
                                    <Border.Background>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                            <GradientStop Color="#FFB5B5B5" Offset="0" />
                                            <GradientStop Color="#FFDEDEDE" Offset="0.1" />
                                            <GradientStop Color="#FFEEEEEE" Offset="0.5" />
                                            <GradientStop Color="#FFFAFAFA" Offset="0.5" />
                                            <GradientStop Color="#FFFEFEFE" Offset="1" />
                                        </LinearGradientBrush>
                                    </Border.Background>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <Ellipse x:Name="Off" Width="14" Height="14" Stroke="#FF7A7A7A" StrokeThickness="2" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" />
                                        <Line x:Name="On" X1="0" Y1="0" X2="0" Y2="14" Stroke="#FF7A7A7A" StrokeThickness="2" Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Center" />
                                    </Grid>
                                </Border>
                                <Border BorderBrush="#FF939393" HorizontalAlignment="Left" x:Name="slider" Width="41" Height="27" BorderThickness="1" CornerRadius="3" RenderTransformOrigin="0.5,0.5" Margin="0">
                                    <Border.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleX="1" ScaleY="1" />
                                            <SkewTransform AngleX="0" AngleY="0" />
                                            <RotateTransform Angle="0" />
                                            <TranslateTransform X="0" Y="0" />
                                        </TransformGroup>
                                    </Border.RenderTransform>
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                            <GradientStop Color="#FFF0F0F0" Offset="0" />
                                            <GradientStop Color="#FFCDCDCD" Offset="0.1" />
                                            <GradientStop Color="#FFFBFBFB" Offset="1" />
                                        </LinearGradientBrush>
                                    </Border.Background>
                                </Border>
                            </Grid>
                        </DockPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Trigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource OnUnchecking}" x:Name="OnUnchecking_BeginStoryboard" />
                                </Trigger.ExitActions>
                                <Trigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource OnChecking}" x:Name="OnChecking_BeginStoryboard" />
                                </Trigger.EnterActions>
                                <Setter TargetName="On" Property="Stroke" Value="White" />
                                <Setter TargetName="Off" Property="Stroke" Value="White" />
                                <!-- Change Orange or Blue color here -->
                                <Setter TargetName="BackgroundBorder" Property="Background" Value="{StaticResource CheckedOrange}" />
                                <Setter TargetName="BackgroundBorder" Property="BorderBrush" Value="{StaticResource CheckedOrangeBorder}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <!-- ToDo: Add Style for Isenabled == False -->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="869*"/>
            <ColumnDefinition Width="100*"/>
            <ColumnDefinition Width="0*"/>
        </Grid.ColumnDefinitions>
        <Grid HorizontalAlignment="Left" Height="134" Margin="-1045,557,0,-45" VerticalAlignment="Top" Width="134"/>
        <TextBlock HorizontalAlignment="Left" Height="57" Margin="-905,564,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="830" Foreground="#FFF9F7F7" FontFamily="Century Gothic" FontSize="48"><Run Text="TNC Prediction "/><Run Text="Console"/></TextBlock>
        <Grid HorizontalAlignment="Left" Height="646" Margin="-1,0,0,0" VerticalAlignment="Top" Width="970" Grid.ColumnSpan="2">
            <Image HorizontalAlignment="Left" Height="646" Margin="0,0,-14,0" VerticalAlignment="Top" Width="984" Source="Background/Picture3.jpg"/>
            <Grid HorizontalAlignment="Left" Height="63" Margin="139,0,0,0" VerticalAlignment="Top" Width="831" MouseLeftButtonDown="Grid_MouseLeftButtonDown">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="175*"/>
                    <ColumnDefinition Width="241*"/>
                </Grid.ColumnDefinitions>
                <Button x:Name ="BtnUpload" Content="Predict" Margin="148,0,62.333,0" VerticalAlignment="Top" Height="32" Background="{x:Null}" FontFamily="Century Gothic" Foreground="WhiteSmoke" Click="BtnUpload_Click" BorderBrush="{x:Null}" FontSize="16" Style="{DynamicResource ButtonStyle1}"/>
                <Button x:Name ="BrowseBtn" Content="Browse" HorizontalAlignment="Left" Margin="75.667,0,0,0" VerticalAlignment="Top" Width="137" Height="32" Background="{x:Null}" FontFamily="Century Gothic" Foreground="WhiteSmoke" Click="BrowseBtn_Click" BorderBrush="{x:Null}" FontSize="16" Style="{DynamicResource ButtonStyle1}" Grid.Column="1"/>
                <Button x:Name ="ReportsBtn" Content="Report" HorizontalAlignment="Left" Margin="217.667,0,0,0" VerticalAlignment="Top" Width="138" Height="32" Background="{x:Null}" FontFamily="Century Gothic" Foreground="WhiteSmoke" Click="Reports_Click" BorderBrush="{x:Null}" FontSize="16" Style="{DynamicResource ButtonStyle1}" Grid.Column="1"/>
                <Button x:Name ="BtnHome" Content="Home" HorizontalAlignment="Left" Margin="10,0,0,0" VerticalAlignment="Top" Width="138" Height="32" Background="{x:Null}" FontFamily="Century Gothic" Foreground="WhiteSmoke" Click="Home_Click" BorderBrush="{x:Null}" FontSize="16" Style="{DynamicResource ButtonStyle1}"/>
                <Button x:Name ="ConfirmBtn" Content="Confirm" Margin="287,0,405.667,0" VerticalAlignment="Top" Height="32" Background="{x:Null}" FontFamily="Century Gothic" Foreground="WhiteSmoke" Click="Confirm_Click" BorderBrush="{x:Null}" FontSize="16" Style="{DynamicResource ButtonStyle1}" Grid.ColumnSpan="2"/>
                <Button x:Name ="SettingsBtn" Content="Settings" HorizontalAlignment="Left" Margin="343.667,0,-0.333,0" VerticalAlignment="Top" Width="138" Height="32" Background="{x:Null}" FontFamily="Century Gothic" Foreground="WhiteSmoke" Click="Settings_Click" BorderBrush="{x:Null}" FontSize="16" Style="{DynamicResource ButtonStyle1}" Grid.Column="1"/>
            </Grid>
            <Grid HorizontalAlignment="Left" Height="589" Margin="139,57,0,0" VerticalAlignment="Top" Width="831">
                <Grid.RowDefinitions>
                    <RowDefinition Height="273*"/>
                    <RowDefinition Height="316*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="559*"/>
                    <ColumnDefinition Width="41*"/>
                    <ColumnDefinition Width="116*"/>
                    <ColumnDefinition Width="60*"/>
                    <ColumnDefinition Width="55*"/>
                </Grid.ColumnDefinitions>
                <ProgressBar x:Name="UploadingBar" HorizontalAlignment="Left" Height="61" VerticalAlignment="Top" Width="831" Margin="0,255,0,0" Grid.ColumnSpan="5" Background="{x:Null}" BorderBrush="{x:Null}" Style="{DynamicResource ProgressBarStyle1}" Grid.Row="1">
                    <ProgressBar.Foreground>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="Black" Offset="0"/>
                            <GradientStop Color="#FF1881FF" Offset="1"/>
                        </LinearGradientBrush>
                    </ProgressBar.Foreground>
                </ProgressBar>
                <Canvas x:Name="cnvs" Width="560" Height="368">
                    <Rectangle x:Name="BoundingBox" Canvas.Left="144" Canvas.Top="114" Width="100" Height="100" Panel.ZIndex="99" Visibility="Hidden" >
                        <Rectangle.Fill>
                            <SolidColorBrush Color="#FF832C2C" Opacity="0.3"/>
                        </Rectangle.Fill>
                    </Rectangle>
                    <Image x:Name="pictureBox1" HorizontalAlignment="Left" Height="368" VerticalAlignment="Top" Width="560" Margin="-1,-9,0,0" Grid.RowSpan="2"/>
                </Canvas>

                <TextBlock x:Name="richTextBox1" HorizontalAlignment="Left" Height="134" Margin="0,181.667,-0.224,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="831" FontSize="36" FontFamily="Century Gothic" Background="{x:Null}" Grid.ColumnSpan="5"  Grid.Row="1" Foreground="White" />
                <ListBox x:Name="ListV" HorizontalAlignment="Left" Height="374" Margin="1,0,0,0" VerticalAlignment="Top" Width="271" Grid.ColumnSpan="4" Grid.Column="1" Grid.RowSpan="2" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="White" FontFamily="ListV" FontSize="18" ScrollViewer.VerticalScrollBarVisibility="Disabled" MouseLeftButtonDown="ListV_MouseLeftButtonDown" PreviewMouseLeftButtonDown="ListV_PreviewMouseLeftButtonDown" MouseEnter="ListV_MouseEnter">
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="ListBoxItem">
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="IsSelected" Value="True"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ListBox.ItemContainerStyle>
                </ListBox>
                <TextBox x:Name="ConfirmTextBox" HorizontalAlignment="Left" Height="38" Margin="10,268,0,0" Grid.Row="1" TextWrapping="Wrap" VerticalAlignment="Top" Width="289" Foreground="#FFF6F4F4" Background="{x:Null}" FontSize="25" Visibility="Hidden"/>
                <Button x:Name="ConfirmButton" Content="Submit" HorizontalAlignment="Left" Height="38" Margin="337,268,0,0" Grid.Row="1" VerticalAlignment="Top" Width="162" Background="{x:Null}" Foreground="#FFF8F7F7" FontSize="20" Click="ConfirmButton_Click" Visibility="Hidden"/>
                <TextBlock x:Name="FolderProgressBox" HorizontalAlignment="Left" Height="96" Margin="0,85.667,0,0" Grid.Row="1" TextWrapping="Wrap" VerticalAlignment="Top" Width="560"  FontFamily="Century Gothic" FontSize="24" Background="{x:Null}" Foreground="#FFFAF8F8" Grid.ColumnSpan="2" />
            </Grid>
            <Grid x:Name="ConfigGrid" HorizontalAlignment="Left" Height="646" VerticalAlignment="Top" Width="139">
                <TextBlock x:Name="TextLineBox" HorizontalAlignment="Left" Height="24" Margin="10,152,0,0" TextWrapping="Wrap" Text="Offline" VerticalAlignment="Top" Width="120"  FontSize="16" Background="{x:Null}" Foreground="White"  FontFamily="Century Gothic" />
                <CheckBox x:Name="Continuation" Content="" HorizontalAlignment="Left" Margin="9,237,0,0" VerticalAlignment="Top" Style="{DynamicResource OrangeSwitchStyle}" RenderTransformOrigin="0.412,1.861" Checked="Continuation_Checked" Unchecked="Continuation_Unchecked"/>
                <TextBlock x:Name="ContinuationBox" HorizontalAlignment="Left" Height="24" Margin="10,208,0,0" TextWrapping="Wrap" Text="Continue Off" VerticalAlignment="Top" Width="128"  FontSize="16" Background="{x:Null}" Foreground="White"  FontFamily="Century Gothic" />
                <CheckBox x:Name="OnlineCheckBox" Content="" HorizontalAlignment="Left" Margin="9,176,0,0" VerticalAlignment="Top" Style="{DynamicResource OrangeSwitchStyle}" RenderTransformOrigin="0.412,1.861" Checked="CheckBox_Checked" Unchecked="CheckBox_Unchecked"/>
                <Button x:Name ="UploadOnlyBtn" Content="Upload" HorizontalAlignment="Left" Margin="-8,347,0,0" VerticalAlignment="Top" Width="138" Height="32" Background="{x:Null}" FontFamily="Century Gothic" Foreground="WhiteSmoke" Click="Upload_Click" BorderBrush="{x:Null}" FontSize="16" Style="{DynamicResource ButtonStyle1}"/>
                <Slider x:Name="ConfidenceBar" HorizontalAlignment="Left" Height="12" Margin="10,303,0,0" VerticalAlignment="Top" Width="119" Maximum="100" LargeChange="5" SmallChange="0" ValueChanged="ConfidenceBar_ValueChanged_1" Value="90"/>
                <TextBlock x:Name="ConfidenceBarText" HorizontalAlignment="Left" Height="24" Margin="95,274,0,0" TextWrapping="Wrap" Text="{Binding ElementName=ConfidenceBar,Path=Value}" VerticalAlignment="Top" Width="43"  FontSize="16" Background="{x:Null}" Foreground="White"  FontFamily="Century Gothic" />
                <TextBlock x:Name="TextLineBox_Copy" HorizontalAlignment="Left" Height="24" Margin="9,274,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="86"  FontSize="14" Background="{x:Null}" Foreground="White"  FontFamily="Century Gothic" Text="Confidence:" />
                <Button x:Name ="AddLocatoinInformationBtn" Content="Locations" HorizontalAlignment="Left" Margin="0,315,0,0" VerticalAlignment="Top" Width="138" Height="32" Background="{x:Null}" FontFamily="Century Gothic" Foreground="WhiteSmoke" Click="ManageLocation" BorderBrush="{x:Null}" FontSize="16" Style="{DynamicResource ButtonStyle1}" RenderTransformOrigin="0.12,0.625"/>
                <Button x:Name ="OK" Content="OK" HorizontalAlignment="Left" VerticalAlignment="Top" Width="138" Height="32" Background="{x:Null}" FontFamily="Century Gothic" Foreground="WhiteSmoke" Click="Ok_Click" BorderBrush="{x:Null}" FontSize="16" Style="{DynamicResource ButtonStyle1}" Margin="10,512,-9,0"/>
                <CheckBox x:Name="PredictionOnlyCheckBox" Content="" HorizontalAlignment="Left" Margin="10,120,0,0" VerticalAlignment="Top" Style="{DynamicResource OrangeSwitchStyle}" RenderTransformOrigin="0.412,1.861" Checked="PredictionOnlyCheckBox_Checked" Unchecked="PredictionOnlyCheckBox_Unchecked"/>
                <TextBlock x:Name="PredictionOnlyBtn" HorizontalAlignment="Left" Height="24" Margin="11,91,0,0" TextWrapping="Wrap" Text="Demo only" VerticalAlignment="Top" Width="128"  FontSize="16" Background="{x:Null}" Foreground="White"  FontFamily="Century Gothic" />
            </Grid>
            <Grid HorizontalAlignment="Left" Height="590" Margin="0,57,0,-1" VerticalAlignment="Top" Width="959">
                <StackPanel x:Name="ViewStackPanel" HorizontalAlignment="Left" Height="589" VerticalAlignment="Top" Width="959" Orientation="Horizontal"/>
            </Grid>
        </Grid>

    </Grid>


</Window>
    

    

    

    
